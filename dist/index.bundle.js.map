{"version":3,"file":"index.bundle.js","mappings":";;;;AAAA;AACA,IAAMA,OAAO,GAAG,qCAAqC;;AAErD;AACA,SAASC,WAAWA,CAACC,KAAK,EAAE;EACxB,IAAMC,GAAG,4CAAAC,MAAA,CAA4CC,kBAAkB,CAACH,KAAK,CAAC,CAAE;EAEhF,OAAOI,KAAK,CAACH,GAAG,CAAC,CACZI,IAAI,CAAC,UAAAC,QAAQ;IAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CAAE;EAAA,CACnCF,IAAI,CAAC,UAAAG,IAAI,EAAI;IACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,IAAI,CAACG,SAAS,CAAC;IACjDF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE1C;IACA,OAAOJ,IAAI,CAACI,IAAI;EACpB,CAAC,CAAC,SACI,CAAC,UAAAC,KAAK,EAAI;IACZJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,OAAO,EAAE,CAAC,CAAE;EAChB,CAAC,CAAC;AACV;;AAEA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EACzB,IAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;EACzDF,UAAU,CAACG,SAAS,GAAG,EAAE,CAAC,CAAE;;EAE5B,IAAIJ,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;IACpBJ,UAAU,CAACG,SAAS,GAAG,wBAAwB;IAC/C;EACJ;EAEAJ,KAAK,CAACM,OAAO,CAAC,UAAAC,IAAI,EAAI;IAClB,IAAMC,OAAO,GAAGN,QAAQ,CAACO,aAAa,CAAC,KAAK,CAAC;IAC7CD,OAAO,CAACE,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAE7B,IAAM1B,KAAK,GAAGsB,IAAI,CAACtB,KAAK,IAAI,oBAAoB;IAChD,IAAM2B,OAAO,GAAGL,IAAI,CAACM,WAAW,GAAGN,IAAI,CAACM,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,sBAAsB;IACvF,IAAMC,gBAAgB,GAAGR,IAAI,CAACS,kBAAkB,IAAI,cAAc;IAClE,IAAMC,QAAQ,GAAGV,IAAI,CAACW,OAAO,GAAGX,IAAI,CAACW,OAAO,CAACJ,IAAI,CAAC,IAAI,CAAC,GAAG,uBAAuB;IAEjFN,OAAO,CAACJ,SAAS,wBAAAjB,MAAA,CACPF,KAAK,wDAAAE,MAAA,CACsByB,OAAO,6DAAAzB,MAAA,CACD4B,gBAAgB,sDAAA5B,MAAA,CACvB8B,QAAQ,mBAC3C;IAEDhB,UAAU,CAACkB,WAAW,CAACX,OAAO,CAAC;EACnC,CAAC,CAAC;AACN;;AAEA;AACAN,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACiB,gBAAgB,CAAC,OAAO,EAAE,YAAY;EAC1E,IAAMC,WAAW,GAAGnB,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACmB,KAAK;EAChE,IAAID,WAAW,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3BC,KAAK,CAAC,6BAA6B,CAAC;IACpC;EACJ;;EAEA;EACAxC,WAAW,CAACqC,WAAW,CAAC,CACnB/B,IAAI,CAAC,UAAAU,KAAK;IAAA,OAAID,YAAY,CAACC,KAAK,CAAC;EAAA,EAAC,SAC7B,CAAC,UAAAF,KAAK;IAAA,OAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;EAAA,EAAC;AAC7C,CAAC,CAAC,C","sources":["webpack://todolist/./src/js/index.js"],"sourcesContent":["// Define the base URL for the Open Library search API\r\nconst baseURL = \"https://openlibrary.org/search.json\";\r\n\r\n// Function to search for books\r\nfunction searchBooks(title) {\r\n    const url = `https://openlibrary.org/search.json?q=${encodeURIComponent(title)}`;\r\n\r\n    return fetch(url)\r\n        .then(response => response.json())  // Parse the JSON response\r\n        .then(data => {\r\n            console.log('Total books found:', data.num_found);\r\n            console.log('First result:', data.docs[0]);\r\n\r\n            // Return the books data\r\n            return data.docs;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            return [];  // Return empty array if error occurs\r\n        });\r\n}\r\n\r\n// Function to display books on the page\r\nfunction displayBooks(books) {\r\n    const resultsDiv = document.getElementById('bookResults');\r\n    resultsDiv.innerHTML = '';  // Clear previous results\r\n\r\n    if (books.length === 0) {\r\n        resultsDiv.innerHTML = '<p>No books found.</p>';\r\n        return;\r\n    }\r\n\r\n    books.forEach(book => {\r\n        const bookDiv = document.createElement('div');\r\n        bookDiv.classList.add('book');\r\n\r\n        const title = book.title || 'No Title Available';\r\n        const authors = book.author_name ? book.author_name.join(', ') : 'No Authors Available';\r\n        const firstPublishYear = book.first_publish_year || 'Unknown Year';\r\n        const subjects = book.subject ? book.subject.join(', ') : 'No Subjects Available';\r\n\r\n        bookDiv.innerHTML = `\r\n            <h2>${title}</h2>\r\n            <p><strong>Author(s):</strong> ${authors}</p>\r\n            <p><strong>First Published:</strong> ${firstPublishYear}</p>\r\n            <p><strong>Subjects:</strong> ${subjects}</p>\r\n        `;\r\n\r\n        resultsDiv.appendChild(bookDiv);\r\n    });\r\n}\r\n\r\n// Handle the search button click\r\ndocument.getElementById('searchButton').addEventListener('click', function () {\r\n    const searchQuery = document.getElementById('searchInput').value;\r\n    if (searchQuery.trim() === '') {\r\n        alert('Please enter a search query');\r\n        return;\r\n    }\r\n\r\n    // Call searchBooks with the query and then display results\r\n    searchBooks(searchQuery)\r\n        .then(books => displayBooks(books))\r\n        .catch(error => console.error(error));\r\n});\r\n"],"names":["baseURL","searchBooks","title","url","concat","encodeURIComponent","fetch","then","response","json","data","console","log","num_found","docs","error","displayBooks","books","resultsDiv","document","getElementById","innerHTML","length","forEach","book","bookDiv","createElement","classList","add","authors","author_name","join","firstPublishYear","first_publish_year","subjects","subject","appendChild","addEventListener","searchQuery","value","trim","alert"],"sourceRoot":""}